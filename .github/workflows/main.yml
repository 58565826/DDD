name: 编译DDD

on:
  push:
    branches: #当分支改动时触发
      - main
  watch:
    types: [started]  #当star增加时触发

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      #- uses: actions/checkout@v2

      - name: 设置Go环境
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17
          
      #- name: 测试GO环境安装情况
      #  run: |
      #    go env
          
      #- name: 查看GO版本
      #  run: |
      #    go version
      

      - name: Gox编译xdd
        run: |
          cd ./
          go get github.com/mitchellh/gox
          CGO_ENABLED=1 gox -os "windows linux" -arch "amd64 arm arm64"
          ls
      #    go build -v -o xdd_linux_amd64 /home/runner/work/xdd # 这 3 条是交叉编译 Go 的指令，酌情修改。
      #    CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -v -o xdd_windows_amd64.exe /home/runner/work/xdd
      #    CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -v -o xdd_darwin_amd64 /home/runner/work/xdd
      
          
      - name: 创建当前时间戳
        id: create_timestamp
        run: echo "::set-output name=timestamp::$(date '+%Y%m%d%H%M%s')"
        shell: bash
        
      - name: 上传Releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: DDD_*
          tag: DDD-${{ steps.create_timestamp.outputs.timestamp }}
        overwrite: true
        file_glob: true
      #- name: Release
      #  uses: softprops/action-gh-release@v1
      #  with: # 将下述可执行文件 release 上去
      #    tag_name: ${{ steps.create_timestamp.outputs.timestamp }}
      #    name: DDD-${{ steps.create_timestamp.outputs.timestamp }}
      #    files: |
      #      ./DDD_linux_amd64
       #     ./DDD_windows_amd64.exe
       #     ./DDD_darwin_amd64
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      